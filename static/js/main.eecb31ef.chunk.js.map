{"version":3,"sources":["data/api.jsx","App/App.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Loader/Spinner.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","App/App.jsx","index.js"],"names":["axios","defaults","baseURL","fetchImages","searchQuery","page","a","params","get","response","data","hits","Container","styled","div","Header","header","SearchForm","form","SubmitBtn","button","BtnLabel","span","Input","input","SearchBar","onSearch","onSubmit","e","preventDefault","target","elements","value","trim","toLowerCase","toast","info","type","name","autoComplete","autoFocus","placeholder","Gallery","ul","Item","li","Image","img","GalleryItem","webformatURL","tags","onImageClick","largeImageURL","onClick","src","alt","ImageGallery","images","onImageSelect","map","image","id","Overlay","ModalContainer","modalRoot","document","querySelector","Modal","handleKeyDown","event","code","props","onClose","handleOverlayClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","Component","override","css","Spinner","color","loading","useState","size","Btn","LoadBtn","prototypes","PropTypes","func","isRequired","App","state","status","selectedImage","handleQueryChange","resetState","setState","toggleModal","incrementPage","handleSelectedImage","imageURL","prevPops","prevState","length","Error","warning","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"8TAEAA,IAAMC,SAASC,QAAU,0BAElB,I,cAAMC,EAAW,uCAAG,WAAOC,EAAaC,GAApB,iBAAAC,EAAA,4DACT,qCACVC,EAFmB,eAEFF,EAFE,gBACT,qCADS,iEAGFL,IAAMQ,IAAN,aAAgBJ,EAAhB,YAA+BG,IAH7B,cAGnBE,EAHmB,yBAIlBA,EAASC,KAAKC,MAJI,2CAAH,wD,cCFXC,EAAYC,IAAOC,IAAV,yHCATC,EAASF,IAAOG,OAAV,qcAkBNC,EAAaJ,IAAOK,KAAV,kLASVC,EAAYN,IAAOO,OAAV,gaAiBTC,EAAWR,IAAOS,KAAV,gNAWRC,EAAQV,IAAOW,MAAV,wP,OCpDX,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAWxB,OACI,cAACX,EAAD,UACE,eAACE,EAAD,CACIU,SAbS,SAAAC,GACnBA,EAAEC,iBACiD,KAA/CD,EAAEE,OAAOC,SAAS3B,YAAY4B,MAAMC,QAIxCP,EAASE,EAAEE,OAAOC,SAAS3B,YAAY4B,MAAME,cAAcD,QAC3DL,EAAEE,OAAOC,SAAS3B,YAAY4B,MAAQ,IAJpCG,IAAMC,KAAK,yBASP,UAEM,cAACjB,EAAD,CAAWkB,KAAK,SAAhB,SACI,cAAChB,EAAD,uBAEJ,cAACE,EAAD,CACIe,KAAK,cACLD,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,kCC1BzB,I,UAAMC,EAAU7B,IAAO8B,GAAV,4RCAPC,EAAO/B,IAAOgC,GAAV,sLAKJC,EAAQjC,IAAOkC,IAAV,iNCJX,SAASC,EAAT,GAA2E,IAApDC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,cAC9D,OACE,cAACR,EAAD,CAAMS,QAAS,kBAAMF,EAAaC,IAAlC,SACE,cAACN,EAAD,CAAOQ,IAAKL,EAAcM,IAAKL,MCF9B,SAASM,EAAT,GAAkD,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cACjC,OACE,cAAChB,EAAD,UACKe,EAAOE,KAAI,SAAAC,GAAK,OACT,cAACZ,EAAD,CAEIC,aAAcW,EAAMX,aACpBC,KAAMU,EAAMV,KACZC,aAAcO,EACdN,cAAeQ,EAAMR,eAJhBQ,EAAMC,SCP5B,I,EAAMC,EAAUjD,IAAOC,IAAV,2OAYPiD,EAAiBlD,IAAOC,IAAV,iGAIdgC,EAAQjC,IAAOkC,IAAV,mFCdZiB,EAAYC,SAASC,cAAc,eAE5BC,EAAb,4MASEC,cAAgB,SAAAC,GACK,WAAfA,EAAMC,MACR,EAAKC,MAAMC,WAXjB,EAeEC,mBAAqB,SAAAJ,GACfA,EAAMK,gBAAkBL,EAAMvC,QAChC,EAAKyC,MAAMC,WAjBjB,uDACE,WACEG,OAAOC,iBAAiB,UAAWC,KAAKT,iBAF5C,kCAKE,WACEO,OAAOG,oBAAoB,UAAWD,KAAKT,iBAN/C,oBAqBE,WACE,OAAOW,uBACH,cAACjB,EAAD,CAAST,QAASwB,KAAKJ,mBAAvB,SACI,cAACV,EAAD,UACI,cAAC,EAAD,CAAOT,IAAKuB,KAAKN,MAAMnB,cAAeG,IAAI,SAGpDS,OA5BN,GAA2BgB,a,0BCFrBC,GAAWC,cAAH,wFAMP,SAASC,KACd,OACI,cAAC,KAAD,CAAYC,MAAM,UAAUC,QAASC,oBAAS,GAAOJ,IAAKD,GAAUM,KAAM,K,2BCVnEC,GAAM3E,IAAOO,OAAV,mnBCCT,SAASqE,GAAT,GAA+B,IAAZpC,EAAW,EAAXA,QACtB,OACA,cAACmC,GAAD,CAAKnD,KAAK,SAASgB,QAASA,EAA5B,uBAMJoC,GAAQC,WAAa,CACnBrC,QAASsC,KAAUC,KAAKC,Y,ICDLC,G,4MACnBC,MAAQ,CACN3F,YAAa,KACbqD,OAAQ,GACRuC,OAAQ,OACR3F,KAAM,EACN4F,cAAe,M,EA+BjBC,kBAAoB,SAAA9F,GACd,EAAK2F,MAAM3F,cAAgBA,GAI/B,EAAK+F,aACL,EAAKC,SAAS,CAAEhG,iBAJd+B,IAAMC,KAAK,6B,EAOf+D,WAAa,WACX,EAAKC,SAAS,CACZhG,YAAa,GACbC,KAAM,EACNoD,OAAQ,GACRwC,cAAe,KACfD,OAAQ,U,EAIZK,YAAc,WACZ,EAAKD,UAAS,kBAAwB,CACpCH,eADY,EAAGA,mB,EAKnBK,cAAgB,WACd,EAAKF,SAAS,CAAE/F,KAAM,EAAK0F,MAAM1F,KAAO,K,EAG1CkG,oBAAsB,SAAAC,GACpB,EAAKJ,SAAS,CAAEH,cAAeO,K,+FA1DjC,WAAyBC,EAAUC,GAAnC,qBAAApG,EAAA,2DACgCuE,KAAKkB,MAA3B3F,EADV,EACUA,YAAaC,EADvB,EACuBA,KACjBqG,EAAUtG,cAAgBA,GAAesG,EAAUrG,OAASA,EAFlE,wBAGIwE,KAAKuB,SAAS,CAAEJ,OAAQ,YAH5B,kBAK2B7F,EAAYC,EAAaC,GALpD,WAKYoD,EALZ,QAMkBkD,OANlB,sBAOc,IAAIC,MAPlB,OASM/B,KAAKuB,UAAS,SAACM,GAAD,MAAgB,CAC5BjD,OAAO,GAAD,mBAAMiD,EAAUjD,QAAhB,YAA2BA,IACjCuC,OAAQ,eAXhB,kDAcMnB,KAAKuB,SAAS,CACZJ,OAAQ,aAEV7D,IAAM0E,QAAN,yCAAgDzG,IAjBtD,QAoBIC,EAAO,GACLsE,OAAOmC,SAAS,CACdC,IAAK9C,SAAS+C,gBAAgBC,aAC9BC,SAAU,WAvBlB,0D,6EA8DA,WAEE,MAA0CrC,KAAKkB,MAAvCtC,EAAR,EAAQA,OAAQwC,EAAhB,EAAgBA,cAAeD,EAA/B,EAA+BA,OAE/B,MAAe,SAAXA,EAEA,cAACpF,EAAD,UACE,cAACa,EAAD,CAAWC,SAAUmD,KAAKqB,sBAKjB,YAAXF,EAEA,eAACpF,EAAD,WACE,cAACa,EAAD,CAAWC,SAAUmD,KAAKqB,oBAC1B,cAACf,GAAD,OAKS,aAAXa,EAEE,eAACpF,EAAD,WACE,cAACa,EAAD,CAAWC,SAAUmD,KAAKqB,oBAC1B,cAAC1C,EAAD,CAAcC,OAAQA,EAAQC,cAAemB,KAAK0B,sBACjD9C,EAAOkD,OAAS,GAAK,cAAClB,GAAD,CAASpC,QAASwB,KAAKyB,gBAC5CL,GACC,cAAC,EAAD,CAAO7C,cAAe6C,EAAezB,QAASK,KAAKwB,cAErD,cAAC,IAAD,OAIO,aAAXL,EAEE,eAACpF,EAAD,WACE,cAACa,EAAD,CAAWC,SAAUmD,KAAKqB,oBAC1B,cAAC,IAAD,YAJR,M,GAzG6BlB,aCNjCmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFpD,SAASqD,eAAe,W","file":"static/js/main.eecb31ef.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nexport const fetchImages = async (searchQuery, page) => {\r\n  const API_KEY = '21798157-9b86b9927f38d6bf9be381afe';\r\n  const params = `page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  const response = await axios.get(`?q=${searchQuery}&${params}`);\r\n  return response.data.hits;\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #04125e;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\nexport const SubmitBtn = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  :hover {\r\n  opacity: 1;\r\n}\r\n`;\r\nexport const BtnLabel = styled.span`\r\n position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  ::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`;   ","import PropTypes from \"prop-types\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Header, SearchForm, SubmitBtn, BtnLabel, Input } from \"./Searchbar.styled\"\r\n\r\nexport function SearchBar({ onSearch }) {\r\n  const handleSearch = e => {\r\n    e.preventDefault();\r\n    if (e.target.elements.searchQuery.value.trim() === \"\") {\r\n      toast.info('Please, enter query!');\r\n      return\r\n    }\r\n    onSearch(e.target.elements.searchQuery.value.toLowerCase().trim());\r\n    e.target.elements.searchQuery.value = \"\";\r\n  };\r\n\r\n    return (\r\n        <Header>\r\n          <SearchForm\r\n              onSubmit={handleSearch}>\r\n                <SubmitBtn type=\"submit\">\r\n                    <BtnLabel>Search</BtnLabel>\r\n                </SubmitBtn>\r\n                <Input\r\n                    name=\"searchQuery\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"/>\r\n          </SearchForm>\r\n        </Header>\r\n    );\r\n}\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Gallery = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover {\r\n  transform: scale(1.03);\r\n  cursor: zoom-in;\r\n  }\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Item, Image } from \"./ImageGalleryItem.styled\";\r\n\r\nexport function GalleryItem({ webformatURL, tags, onImageClick, largeImageURL,}) {\r\n  return (\r\n    <Item onClick={() => onImageClick(largeImageURL)}>\r\n      <Image src={webformatURL} alt={tags}\r\n      />\r\n    </Item>\r\n  );\r\n}\r\n\r\nGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};","import PropTypes from \"prop-types\";\r\nimport { Gallery } from \"./ImageGallery.styled\";\r\nimport { GalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nexport function ImageGallery({ images, onImageSelect }) {\r\n      return (\r\n        <Gallery>\r\n            {images.map(image => (\r\n                    <GalleryItem\r\n                        key={image.id}\r\n                        webformatURL={image.webformatURL}\r\n                        tags={image.tags}\r\n                        onImageClick={onImageSelect}\r\n                        largeImageURL={image.largeImageURL}\r\n                />\r\n            ))}\r\n        </Gallery>\r\n    )\r\n};\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onImageSelect: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\nexport const ModalContainer = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n`;","import { Component } from \"react\";\r\nimport { createPortal } from 'react-dom';\r\nimport { Overlay, ModalContainer, Image } from \"./Modal.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    };\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleOverlayClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n        <Overlay onClick={this.handleOverlayClick}>\r\n            <ModalContainer>\r\n                <Image src={this.props.largeImageURL} alt=\"\"/>\r\n            </ModalContainer>\r\n      </Overlay>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}","import { useState } from \"react\";\r\nimport { css } from \"@emotion/react\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport function Spinner() {\r\n  return (\r\n      <BeatLoader color=\"#04125e\" loading={useState(true)} css={override} size={80} />\r\n  );\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Btn = styled.button`\r\n  margin: 0 auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #04125e;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    :hover,\r\n    :focus {\r\n  background-color: #9ccdf5;\r\n}\r\n`;","import PropTypes from 'prop-types';\r\nimport { Btn } from \"./Button.styled\";\r\n\r\nexport function LoadBtn({ onClick }) {\r\n    return (\r\n    <Btn type=\"button\" onClick={onClick}>\r\n      Load more\r\n    </Btn>\r\n  );\r\n};\r\n\r\nLoadBtn.prototypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import { Component } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { fetchImages } from '../data/api';\r\nimport { Container } from './App.styled';\r\nimport { SearchBar } from '../components/Searchbar/Searchbar';\r\nimport { ImageGallery } from '../components/ImageGallery/ImageGallery';\r\nimport { Modal } from '../components/Modal/Modal';\r\nimport { Spinner } from '../components/Loader/Spinner';\r\nimport { LoadBtn } from '../components/Button/Button'\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    searchQuery: null,\r\n    images: [],\r\n    status: 'idle',\r\n    page: 1,\r\n    selectedImage: null,\r\n  };\r\n\r\n  async componentDidUpdate(prevPops, prevState) {\r\n    const { searchQuery, page } = this.state;\r\n    if (prevState.searchQuery !== searchQuery || prevState.page !== page) {\r\n      this.setState({ status: \"pending\" });\r\n      try {\r\n        const images = await fetchImages(searchQuery, page);\r\n        if (!images.length) {\r\n          throw new Error();\r\n        }\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...images],\r\n          status: \"resolved\",\r\n        }));\r\n      } catch (error) {\r\n        this.setState({\r\n          status: \"rejected\"\r\n        });\r\n        toast.warning(`Not Found any images by query: ${searchQuery}`);\r\n      }\r\n\r\n      page > 1 &&\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: \"smooth\",\r\n        });\r\n    }\r\n  };\r\n\r\n  handleQueryChange = searchQuery => {\r\n    if (this.state.searchQuery === searchQuery) {\r\n      toast.info('Please, enter new query!');\r\n      return;\r\n    }\r\n    this.resetState();\r\n    this.setState({ searchQuery });\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      searchQuery: \"\",\r\n      page: 1,\r\n      images: [],\r\n      selectedImage: null,\r\n      status: \"idle\",\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ selectedImage }) => ({\r\n      selectedImage: !selectedImage,\r\n    }));\r\n  };\r\n\r\n  incrementPage = () => {\r\n    this.setState({ page: this.state.page + 1 });\r\n  };\r\n\r\n  handleSelectedImage = imageURL => {\r\n    this.setState({ selectedImage: imageURL });\r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const { images, selectedImage, status } = this.state;\r\n\r\n    if (status === \"idle\") {\r\n      return (\r\n        <Container>\r\n          <SearchBar onSearch={this.handleQueryChange} />\r\n        </Container>\r\n      )\r\n    }\r\n\r\n    if (status === \"pending\") {\r\n      return (\r\n        <Container>\r\n          <SearchBar onSearch={this.handleQueryChange} />\r\n          <Spinner />\r\n        </Container>\r\n      )\r\n   }\r\n\r\n    if (status === \"resolved\") {\r\n          return (\r\n          <Container>\r\n            <SearchBar onSearch={this.handleQueryChange} />\r\n            <ImageGallery images={images} onImageSelect={this.handleSelectedImage}/>\r\n            {images.length > 0 && <LoadBtn onClick={this.incrementPage} />}\r\n            {selectedImage && (\r\n              <Modal largeImageURL={selectedImage} onClose={this.toggleModal} />\r\n            )}\r\n            <ToastContainer />\r\n          </Container>\r\n        )}\r\n      \r\n    if (status === \"rejected\") {\r\n        return (\r\n          <Container>\r\n            <SearchBar onSearch={this.handleQueryChange} />\r\n            <ToastContainer />\r\n          </Container>\r\n        )}\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}